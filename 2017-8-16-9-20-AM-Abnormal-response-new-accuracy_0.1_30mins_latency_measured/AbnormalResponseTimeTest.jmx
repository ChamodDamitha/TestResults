<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="AbnormalResponseTimeTest" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">150000</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1501752466000</longProp>
        <longProp name="ThreadGroup.end_time">1501752466000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;events&gt;&#xd;
    &lt;event&gt;&#xd;
        &lt;metaData&gt;&#xd;
            &lt;clientType&gt;data4&lt;/clientType&gt;&#xd;
        &lt;/metaData&gt;&#xd;
        &lt;payloadData&gt;&#xd;
            &lt;year&gt;100&lt;/year&gt;&#xd;
            &lt;month&gt;100&lt;/month&gt;&#xd;
            &lt;day&gt;100&lt;/day&gt;&#xd;
            &lt;hour&gt;100&lt;/hour&gt;&#xd;
            &lt;minute&gt;70&lt;/minute&gt;&#xd;
            &lt;context&gt;data1&lt;/context&gt;&#xd;
            &lt;api_version&gt;v1&lt;/api_version&gt;&#xd;
            &lt;api&gt;data3&lt;/api&gt;&#xd;
            &lt;resourceTemplate&gt;data2&lt;/resourceTemplate&gt;&#xd;
            &lt;version&gt;data1&lt;/version&gt;&#xd;
            &lt;tenantDomain&gt;data5&lt;/tenantDomain&gt;&#xd;
            &lt;hostName&gt;data3&lt;/hostName&gt;&#xd;
            &lt;apiPublisher&gt;data4&lt;/apiPublisher&gt;&#xd;
            &lt;destination&gt;data1&lt;/destination&gt;&#xd;
            &lt;consumerKey&gt;data2&lt;/consumerKey&gt;&#xd;
            &lt;resourcePath&gt;data2&lt;/resourcePath&gt;&#xd;
            &lt;method&gt;data4&lt;/method&gt;&#xd;
            &lt;response&gt;5000&lt;/response&gt;&#xd;
            &lt;responseTime&gt;${random_response_time}&lt;/responseTime&gt;&#xd;
            &lt;serviceTime&gt;545455&lt;/serviceTime&gt;&#xd;
            &lt;backendTime&gt;545455&lt;/backendTime&gt;&#xd;
            &lt;username&gt;data2&lt;/username&gt;&#xd;
            &lt;eventTime&gt;645565&lt;/eventTime&gt;&#xd;
            &lt;applicationName&gt;data5&lt;/applicationName&gt;&#xd;
            &lt;applicationId&gt;data1&lt;/applicationId&gt;&#xd;
            &lt;cacheHit&gt;false&lt;/cacheHit&gt;&#xd;
            &lt;responseSize&gt;56783&lt;/responseSize&gt;&#xd;
            &lt;protocol&gt;data2&lt;/protocol&gt;&#xd;
            &lt;responseCode&gt;70&lt;/responseCode&gt;&#xd;
            &lt;total_response_count&gt;4354643&lt;/total_response_count&gt;&#xd;
            &lt;_timestamp&gt;${__time()}&lt;/_timestamp&gt;&#xd;
        &lt;/payloadData&gt;&#xd;
    &lt;/event&gt;&#xd;
&lt;/events&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">9764</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">endpoints/testResponseReceiverHTTP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
            <stringProp name="maximumValue">200000</stringProp>
            <stringProp name="minimumValue">50000</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">random_response_time</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="response_counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end">1000</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">response_counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">10</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
